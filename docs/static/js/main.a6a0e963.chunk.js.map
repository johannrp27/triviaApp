{"version":3,"sources":["context/context.js","helpers/shuffleAnswers.js","helpers/getQuestions.js","hooks/useCustomForm.js","components/Welcome/Welcome.jsx","hooks/useQuestion.js","static/icons/correctAnswer.svg","static/icons/wrongAnswer.svg","components/AnswerButton/AnswerButton.jsx","components/Loader/Loader.jsx","components/Question/Question.jsx","static/icons/winner.svg","components/Results/Results.jsx","static/icons/ovni.svg","static/icons/earth.svg","components/404/Page404.jsx","static/icons/triviaPerson.svg","components/Header/Header.jsx","components/Navigation/Navigation.jsx","components/MainPage.jsx","App.js","i18n.js","swRegister.js","index.js"],"names":["TriviaContext","createContext","shuffleAnswers","wrongAnswers","correctAnswer","array","trim","i","length","j","Math","floor","random","getQuestions","amount","difficulty","type","a","params","axios","get","data","response_code","questions","results","map","question","id","questionDecoded","decodeHTML","incorrectAnswers","incorrect_answers","ans","correct_answer","shuffledAnswers","category","answers","text","textArea","document","createElement","innerHTML","value","useCustomForm","useForm","register","handleSubmit","useContext","user","setUser","history","useHistory","startTrivia","e","correct","push","Welcome","t","useTranslation","className","required","autoComplete","placeholder","aria-label","min","valueAsNumber","onClick","useQuestion","useState","isLoading","state","setState","useEffect","currentQuestion","isLast","isClicked","setClicked","addPoint","AnswerButton","answer","style","setStyle","isCorrect","String","fromCharCode","src","correctIcon","alt","wrongIcon","Loader","width","height","border","borderRightColor","role","Question","match","actualQuestionId","Number","to","Results","winnerLogo","Page404","zIndex","ovni","earth","withRouter","location","pathname","search","logo","Navigation","exact","path","component","MainPage","App","initialState","Provider","resources","translation","require","i18n","use","initReactI18next","init","lng","fallbackLng","initImmediate","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a6a0e963.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst TriviaContext = createContext({})\n\nexport default TriviaContext\n","\nconst shuffleAnswers = (wrongAnswers = [], correctAnswer = '') => {\n  const array = [...wrongAnswers, correctAnswer.trim()]\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]]\n  }\n  return array\n}\n\nexport default shuffleAnswers\n","import shuffleAnswers from './shuffleAnswers'\nimport axios from 'axios'\n\nexport const getQuestions = async (amount, difficulty, type) => {\n  const URL = 'https://opentdb.com/api.php'\n  const params = { amount, difficulty, type }\n  const { data } = await axios.get(URL, { params: params })\n\n  if (data.response_code === 0) {\n    const questions = data.results.map((question, id) => {\n      const questionDecoded = decodeHTML(question.question)\n      const incorrectAnswers = question.incorrect_answers.map(ans => decodeHTML(ans))\n      const correctAnswer = decodeHTML(question.correct_answer)\n      const shuffledAnswers = shuffleAnswers(incorrectAnswers, correctAnswer)\n      return {\n        id,\n        category: question.category,\n        question: questionDecoded,\n        correctAnswer: correctAnswer,\n        answers: shuffledAnswers\n      }\n    })\n    return questions\n  }\n  return 'Cannot fetch questions, there is something wrong in url'\n}\n\nconst decodeHTML = (text) => {\n  const textArea = document.createElement('textarea')\n  textArea.innerHTML = text\n  return textArea.value\n}\n","import { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport TriviaContext from '../context/context'\nimport { getQuestions } from '../helpers/getQuestions'\nimport { useForm } from 'react-hook-form'\n\nconst useCustomForm = () => {\n  const { register, handleSubmit } = useForm()\n\n  const { user, setUser } = useContext(TriviaContext)\n  const history = useHistory()\n\n  const startTrivia = async (e) => {\n    const data = await getQuestions(e.amount, e.difficulty, e.type)\n    setUser({ ...user, questions: data, ...e, correct: 0 })\n    history.push(`/question/${1}`)\n  }\n  return { register, handleSubmit, startTrivia }\n}\n\nexport default useCustomForm\n","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport useCustomForm from '../../hooks/useCustomForm'\nimport './Welcome.scss'\n\nconst Welcome = () => {\n  const { t } = useTranslation()\n  const { register, handleSubmit, startTrivia } = useCustomForm()\n\n  return (\n    <div className=\"px-4 pt-5\">\n      <div className=\"h4 title pb-3\">{t('commons.welcome')}</div>\n      <div className=\"mb-3\">\n        <input\n          {...register('name', { required: true })}\n          autoComplete=\"off\"\n          className=\"form-control\"\n          placeholder={t('form.name')}\n          aria-label={t('form.name')}/>\n      </div>\n      <div className=\"mb-3\">\n        <input\n          type=\"number\"\n          {...register('amount', {\n            min: 0,\n            required: true,\n            valueAsNumber: true\n          })}\n          className=\"form-control\"\n          placeholder={t('numberOfQuestions')}\n          aria-label={t('numberOfQuestions')}\n          min=\"0\"/>\n      </div>\n      <div className=\"mb-3\">\n        <select\n          {...register('difficulty')}\n          className=\"form-select\"\n          aria-label=\"Select Difficulty\">\n          <option value=\"\">{t('difficult.name')}</option>\n          <option value=\"easy\">{t('difficult.easy')}</option>\n          <option value=\"medium\">{t('difficult.medium')}</option>\n          <option value=\"hard\">{t('difficult.hard')}</option>\n        </select>\n      </div>\n      <div className=\"mb-3\">\n        <select\n          {...register('type')}\n          className=\"form-select\"\n          aria-label=\"Select type of question\">\n          <option value=\"\">{t('type.name')}</option>\n          <option value=\"multiple\">{t('type.multiple')}</option>\n          <option value=\"boolean\">{t('type.boolean')}</option>\n        </select>\n      </div>\n      <div className=\"mb-3 text-end\">\n        <button type=\"button\" onClick={handleSubmit((e) => startTrivia(e))} className=\"btn btn-primary common shadow\">{t('start')}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome\n","import { useContext, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router'\nimport TriviaContext from '../context/context'\n\nconst useQuestion = (id) => {\n  const history = useHistory()\n  const { user, setUser } = useContext(TriviaContext)\n  const [state, setState] = useState({\n    question: '',\n    isLoading: true\n  })\n\n  const setClicked = () => {\n    setState({ ...state, isClicked: true })\n  }\n  const addPoint = () => {\n    setUser({ ...user, correct: user.correct + 1 })\n  }\n\n  useEffect(() => {\n    const questions = user.questions\n    if (questions.length === 0) history.push('/')\n    else {\n      const currentQuestion = questions[id]\n      const isLast = id === questions.length - 1\n      setState({\n        question: currentQuestion,\n        isLoading: false,\n        isLast: isLast,\n        isClicked: false\n      })\n    }\n  }, [id])\n\n  return { state, setClicked, addPoint }\n}\n\nexport default useQuestion\n","export default __webpack_public_path__ + \"static/media/correctAnswer.26f1d57d.svg\";","export default __webpack_public_path__ + \"static/media/wrongAnswer.ae055bf0.svg\";","import React, { useEffect, useState } from 'react'\nimport './AnswerButton.scss'\nimport correctIcon from '../../static/icons/correctAnswer.svg'\nimport wrongIcon from '../../static/icons/wrongAnswer.svg'\n\nconst AnswerButton = ({ addPoint, isClicked, setClicked, correctAnswer, answer, id }) => {\n  const [style, setStyle] = useState('notAnswered')\n\n  useEffect(() => {\n    setStyle('notAnswered')\n  }, [answer])\n\n  const handleClick = () => {\n    const isCorrect = answer === correctAnswer\n    setClicked(true)\n    if (isCorrect) {\n      setStyle('correct')\n      addPoint()\n    } else {\n      setStyle('wrong')\n    }\n  }\n\n  return (\n    <div type=\"button\" onClick={handleClick} className={`btn radius w-100 mb-3 py-2 ${style} ${isClicked ? 'disabled' : ''}`}>\n      <div className=\"row d-flex align-items-center\">\n        <div className=\"col-2 lead m-0\">{String.fromCharCode(65 + id)}</div>\n        <div className=\"col-8 lead m-0 text-start\">{answer}</div>\n        <div className=\"col-2 m-0 text-center\">\n          { isClicked\n            ? answer === correctAnswer\n              ? <img src={correctIcon} alt=\"Correct Answer\"/>\n              : <img src={wrongIcon} alt=\"Wrong Answer\"/>\n            : ''\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default AnswerButton\n","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <div className=\"card data shadow-lg\">\n      <div className=\"d-flex justify-content-center py-5\">\n        <div className=\"spinner-border my-5\"\n          style={\n            {\n              width: 5 + 'rem',\n              height: 5 + 'rem',\n              border: 0.5 + 'rem solid #5256a1',\n              borderRightColor: 'transparent'\n            }}\n          role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport useQuestion from '../../hooks/useQuestion'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport AnswerButton from '../AnswerButton/AnswerButton'\nimport Loader from '../Loader/Loader'\nimport './Question.scss'\nconst Question = ({ match }) => {\n  const { t } = useTranslation()\n\n  const actualQuestionId = Number(match.params.id)\n  const { state, setClicked, addPoint } = useQuestion(actualQuestionId - 1)\n  const { question, isLoading, isClicked, isLast } = state\n\n  if (isLoading) return <Loader/>\n\n  return (\n    <div className=\"px-4 pt-5\">\n      <div className=\"h4 mb-4 title\">\n        {question.question}\n      </div>\n      <div className=\"pb-3\">\n        {question.answers?.map((answer, id) => (\n          <AnswerButton\n            addPoint = {addPoint}\n            isClicked={isClicked}\n            setClicked={setClicked}\n            key={id}\n            id={id}\n            answer={answer}\n            correctAnswer={question.correctAnswer}\n          />\n        ))}\n      </div>\n      <div className=\"mb-3 text-end\">\n        { isClicked &&\n          <Link to={ isLast ? '/results' : `/question/${actualQuestionId + 1}`}>\n            <button type=\"button\" className=\"btn btn-primary common shadow\">\n              { isLast\n                ? t('commons.end')\n                : t('commons.next')\n              }\n            </button>\n          </Link>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default Question\n","export default __webpack_public_path__ + \"static/media/winner.d76bfdf8.svg\";","import React, { useContext } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport TriviaContext from '../../context/context'\nimport winnerLogo from '../../static/icons/winner.svg'\nimport './Results.scss'\nconst Results = () => {\n  const { t } = useTranslation()\n  const { user: { correct } } = useContext(TriviaContext)\n  return (\n    <div className=\"px-4 pt-5 text-center\">\n      <div className=\"mb-4 results\">\n        <img className=\"pb-5\" src={winnerLogo} alt=\"Winner logo\"/>\n        <div className=\"py-3 display-6 bold\">{t('result.name')}</div>\n        <div className=\"pb-5\">{t('result.t1')} <span className=\"correctAnswers\">{correct || 0}</span> {t('result.t2')} </div>\n        <Link to={'/'}>\n          <button type=\"button\" className=\"btn btn-again\">{t('tryAgain')}</button>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Results\n","export default __webpack_public_path__ + \"static/media/ovni.1aafc528.svg\";","export default __webpack_public_path__ + \"static/media/earth.0ddf6d68.svg\";","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport ovni from '../../static/icons/ovni.svg'\nimport earth from '../../static/icons/earth.svg'\nimport './404.scss'\nconst Page404 = () => {\n  const { t } = useTranslation()\n  return (\n    <div className=\"px-4 pt-5 text-center\">\n      <div className=\"h2 bold pb-3\">{t('commons.sorry')}</div>\n      <div className=\"d-flex flex-column justify-content-center pb-4\">\n        <div style={{ zIndex: 10 }}>\n          <img className=\"img-fluid ovni animate__animated animate__shakeY animate__infinite\" src={ovni} alt=\"Ovni\"/>\n        </div>\n        <div>\n          <img className=\"img-fluid earth\" src={earth} alt=\"Earth\"/>\n        </div>\n      </div>\n      <div className=\"h4 title pb-5\">{t('commons.notFound')}</div>\n    </div>\n  )\n}\n\nexport default Page404\n","export default __webpack_public_path__ + \"static/media/triviaPerson.182b6171.svg\";","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport logo from '../../static/icons/triviaPerson.svg'\nimport './Header.scss'\n\nconst Header = ({ location }) => {\n  return (\n    <div className=\"header\">\n      <div >\n        <div className=\"h1 text-white bold\">TRIVIA GAME</div>\n      </div>\n      <div className={location.pathname.search(/404|results/gmi) >= 0 ? 'd-none' : 'position-relative'}>\n        <img className=\"img-fluid position-absolute trivia\" id=\"img-header\" src={logo} alt=\"Person Trivia\" />\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n","import React from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport Welcome from '../Welcome/Welcome'\nimport Question from '../Question/Question'\nimport Results from '../Results/Results'\nimport Page404 from '../404/Page404'\nimport Header from '../Header/Header'\n\nconst Navigation = () => {\n  return (\n    <Router>\n      <Header/>\n      <div className=\"card data shadow-lg\">\n        <Switch>\n          <Route exact path=\"/\" component={Welcome}/>\n          <Route exact path=\"/question/:id\" component={Question}/>\n          <Route exact path=\"/results\" component={Results}/>\n          <Route exact path=\"/404\" component={Page404}/>\n          <Redirect to=\"/404\"/>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default Navigation\n","import React from 'react'\nimport Navigation from './Navigation/Navigation'\nimport './MainPage.scss'\n\nconst MainPage = () => {\n  return (\n    <div className=\"container h-100 d-flex flex-column justify-content-center align-items-center\">\n      <div className=\"row w-100\">\n        <div className=\"offset-sm-2 offset-lg-3 col-12 col-sm-8 col-lg-6 \">\n          <Navigation/>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MainPage\n","import React, { useState } from 'react'\nimport MainPage from './components/MainPage'\nimport TriviaContext from './context/context'\nimport './scss/App.scss'\nfunction App () {\n  const initialState = {\n    questions: [],\n    correct: 0\n  }\n  const [user, setUser] = useState(initialState)\n  return (\n    <TriviaContext.Provider value={{ user, setUser, initialState }}>\n      <div className=\"App\">\n        <MainPage />\n      </div>\n    </TriviaContext.Provider>\n  )\n}\n\nexport default App\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst LANG = 'es-CO'\n\nconst resources = {\n  'en-US': {\n    translation: require('./locales/en-US.json')\n  },\n  'es-CO': {\n    translation: require('./locales/es-CO.json')\n  }\n}\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: LANG,\n    // debug: true,\n    fallbackLng: 'es-CO',\n    initImmediate: false\n  })\n\nexport default i18n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register (config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.register('./swCustom.js')\n      .then(function (reg) {\n        // registration worked\n        console.log('Registration succeeded. Scope is ' + reg.scope)\n      }).catch(function (error) {\n        // registration failed\n        console.log('Registration failed with ' + error)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './i18n'\nimport './scss/main.scss'\nimport * as serviceWorker from './swRegister'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nserviceWorker.register()\n"],"sourceRoot":""}